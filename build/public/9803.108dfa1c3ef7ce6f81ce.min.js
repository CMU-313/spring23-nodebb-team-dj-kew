"use strict";(self.webpackChunknodebb=self.webpackChunknodebb||[]).push([[9803],{39803:(M,m,h)=>{h.r(m),h.d(m,{compare:()=>g,compareVersions:()=>v,satisfies:()=>S,validate:()=>O});const v=(t,e)=>{const r=c(t),n=c(e),o=r.pop(),i=n.pop(),a=s(r,n);return a!==0?a:o&&i?s(o.split("."),i.split(".")):o||i?o?-1:1:0},O=t=>typeof t=="string"&&/^[v\d]/.test(t)&&y.test(t),g=(t,e,r)=>{V(r);const n=v(t,e);return I[r].includes(n)},S=(t,e)=>{const r=e.match(/^([<>=~^]+)/),n=r?r[1]:"=";if(n!=="^"&&n!=="~")return g(t,e,n);const[o,i,a,,k]=c(t),[j,d,l,,z]=c(e),u=[o,i,a],f=[j,d??"x",l??"x"];if(z&&(!k||s(u,f)!==0||s(k.split("."),z.split("."))===-1))return!1;const E=f.findIndex(C=>C!=="0")+1,p=n==="~"?2:E>1?E:1;return!(s(u.slice(0,p),f.slice(0,p))!==0||s(u.slice(p),f.slice(p))===-1)},y=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,c=t=>{if(typeof t!="string")throw new TypeError("Invalid argument expected string");const e=t.match(y);if(!e)throw new Error(`Invalid argument not valid semver ('${t}' received)`);return e.shift(),e},x=t=>t==="*"||t==="x"||t==="X",w=t=>{const e=parseInt(t,10);return isNaN(e)?t:e},$=(t,e)=>typeof t!=typeof e?[String(t),String(e)]:[t,e],T=(t,e)=>{if(x(t)||x(e))return 0;const[r,n]=$(w(t),w(e));return r>n?1:r<n?-1:0},s=(t,e)=>{for(let r=0;r<Math.max(t.length,e.length);r++){const n=T(t[r]||"0",e[r]||"0");if(n!==0)return n}return 0},I={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]},b=Object.keys(I),V=t=>{if(typeof t!="string")throw new TypeError(`Invalid operator type, expected string but got ${typeof t}`);if(b.indexOf(t)===-1)throw new Error(`Invalid operator, expected one of ${b.join("|")}`)}}}]);
